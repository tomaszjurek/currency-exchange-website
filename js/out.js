/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(1);


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n$(function () {\n\n  var nbpApi = \"http://api.nbp.pl/api/exchangerates/tables/c/?format=json\";\n  var tabResultBid = [],\n      tabResultAsk = [],\n      index = 0,\n      alert = $(\"div.alert\");\n\n  // Inject table with currencies\n  var insertCurrency = function insertCurrency(currency) {\n    var tableInsert = $(\"table#currency\").find(\"tbody\"),\n        dateInsert = $(\"table#currency\").find(\"th\").first();\n    dateInsert.text(currency.effectiveDate);\n    for (var i = 0; i < currency.rates.length; i++) {\n      var tr = $(\"<tr class='active'></tr>\"),\n          code = $(\"<td>\").text(currency.rates[i].code),\n          bid = $(\"<td>\").text(currency.rates[i].bid),\n          ask = $(\"<td>\").text(currency.rates[i].ask);\n      tableInsert.append(tr);\n      tr.append(code);\n      tr.append(bid);\n      tr.append(ask);\n    };\n  };\n\n  // Inject options to select\n  var insertExchange = function insertExchange(currency) {\n    var currencyInsert = $(\"form#calculatorForm select#currencySelect\");\n    for (var i = 0; i < currency.length; i++) {\n      var option = $(\"<option></option>\").val(currency[i].code).text(currency[i].code).attr(\"data-id\", [i]).attr(\"data-bid\", currency[i].bid).attr(\"data-ask\", currency[i].ask);\n      currencyInsert.append(option);\n    };\n  };\n\n  // Ajax\n  var loadCurrency = function loadCurrency() {\n    $.ajax({\n      url: nbpApi\n    }).done(function (response) {\n      insertCurrency(response[0]);\n      insertExchange(response[0].rates);\n    }).fail(function (error) {\n      console.log(error);\n    });\n  };\n  loadCurrency();\n\n  // Validation for calculator form\n  $(\"button#check\").on(\"click\", function (event) {\n    event.preventDefault();\n    var optionSelected = $(\"select#currencySelect\").find(\":selected\"),\n        checkboxValue = $('input[name=bidAsk]:checked', '#calculatorForm').val(),\n        calculator = $(\"div#calculator\").next(),\n        choosenCurrency = $(\"div#calculator\").find(\"div.inserted-currency\");\n\n    if (checkboxValue === \"bid\") {\n      choosenCurrency.text(optionSelected.val() + \" \" + optionSelected.attr(\"data-bid\"));\n      calculator.append(choosenCurrency);\n    } else if (checkboxValue === \"ask\") {\n      choosenCurrency.text(optionSelected.val() + \" \" + optionSelected.attr(\"data-ask\"));\n      calculator.append(choosenCurrency);\n    } else if (checkboxValue === undefined) {\n      alert.find(\"strong\").text(\"Please choose bid or ask\");\n      alert.css(\"display\", \"block\");\n      calculator.append(choosenCurrency);\n    }\n  });\n\n  // Calculator\n  $(\"button#exchange\").on(\"click\", function (event) {\n    event.preventDefault();\n    var resultBid = void 0,\n        resultAsk = void 0,\n        amountInput = $(\"input[name=amount]\").val(),\n        amountInputNumber = parseFloat(amountInput),\n        currency = $(\"div.inserted-currency\").text().substring(4),\n        currencyNumber = parseFloat(currency),\n        checkboxValue = $(\"input[name=bidAsk]:checked\", \"#calculatorForm\").val(),\n        bidAskList = $(\"div#calculator\").find(\"table#bidAskTable\").find(\"tbody\");\n\n    if (amountInput !== \"\" & amountInputNumber >= 0) {\n      if (checkboxValue === \"bid\") {\n        resultBid = amountInputNumber * currencyNumber;\n        resultBid = resultBid.toFixed(2);\n        tabResultBid.push(resultBid);\n        console.log(tabResultBid);\n        var currencyCode = $(\"div.inserted-currency\").text().substring(0, 4),\n            tr = $(\"<tr class='active'></tr>\").attr(\"data-i\", index),\n            currencyTd = $(\"<td>\").text(currencyCode),\n            amountTd = $(\"<td>\").text(amountInputNumber),\n            plnTd = $(\"<td>\").text(resultBid),\n            btnDelete = $(\"<button class='btn delete'>\").text(\"Delete\");\n\n        index += 1;\n\n        bidAskList.append(tr);\n        tr.append(currencyTd);\n        tr.append(amountTd);\n        tr.append(plnTd);\n        tr.append(btnDelete);\n        resultBid = 0;\n      } else if (checkboxValue === \"ask\") {\n        console.log(checkboxValue);\n      }\n    } else {\n      alert.find(\"strong\").text(\"Please enter Your amount or choose bid/ask\");\n      alert.css(\"display\", \"block\");\n    }\n  });\n\n  $(\"table#bidAskTable\").on(\"click\", \".delete\", function () {\n    tabResultBid.splice(tabResultBid.indexOf($(this).prev().text()), 1);\n    console.log(tabResultBid);\n    $(this).parent().remove();\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n");

/***/ })
/******/ ]);